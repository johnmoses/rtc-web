# Accounts
query userList(
  $search: String
  $isVerified: Boolean
  $isDeleted: Boolean
  $last: Int
) {
  users(search: $search, isVerified: $isVerified, isDeleted: $isDeleted, last: $last) {
    count
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      cursor
      node {
        id
        username
        firstName
        lastName
        avatar
        mobile
        email
        gender
        bio
        address
        location
        birthDate
        isVerified
        isBusiness
        isUsed
        isStaff
        isAdmin
        isActive
        dateJoined
        modifiedAt
        isDeleted
        deletedAt
        userMeetings {
          count
        }
      }
    }
  }
}

query userSelect($id: ID!) {
  user(id: $id) {
    id
    username
    firstName
    lastName
    avatar
    mobile
    email
    gender
    bio
    address
    location
    birthDate
    isVerified
    isBusiness
    isUsed
    isStaff
    isAdmin
    isActive
    dateJoined
    modifiedAt
    isDeleted
    deletedAt
    userMeetings {
      count
      edges {
        node {
          id
          starter {
            id
            username
          }
          createdAt
        }
      }
    }
  }
}

query meQuery {
  me {
    id
    username
    firstName
    lastName
    avatar
    mobile
    email
    gender
    bio
    address
    location
    birthDate
    isVerified
    isBusiness
    isUsed
    isStaff
    isAdmin
    isActive
    dateJoined
    modifiedAt
    isDeleted
    deletedAt
    userMeetings {
      count
      edges {
        node {
          id
          starter {
            id
            username
          }
          createdAt
        }
      }
    }
  }
}

mutation userCreate($username: String!, $password: String!) {
  userCreate(username: $username, password: $password) {
    user {
      id
      username
      password
    }
  }
}

mutation tokenAuth($username: String!, $password: String!) {
  tokenAuth(username: $username, password: $password) {
    token
  }
}

mutation verifyToken {
  verifyToken(
    token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImpvaG4iLCJleHAiOjE1NzI5NDg4MDQsIm9yaWdJYXQiOjE1NzI5NDg1MDR9.eZy4DNchj-K-QThICqZ8pmbBSVkQrnJvTOaTmfZh3tQ"
  ) {
    payload
  }
}

mutation namesUpdate($firstName: String!, $lastName: String!) {
  namesUpdate(firstName: $firstName, lastName: $lastName) {
    user {
      id
      username
      firstName
      lastName
    }
  }
}

mutation emailUpdate($email: String!) {
  emailUpdate(email: $email) {
    user {
      id
      username
      email
    }
  }
}

mutation avatarUpdate($avatar: String!) {
  avatarUpdate(avatar: $avatar) {
    user {
      id
      username
      avatar
    }
  }
}

mutation birthdayUpdate($birthDate: String!) {
  birthdayUpdate(birthDate: $birthDate) {
    user {
      id
      username
      birthDate
    }
  }
}

mutation genderUpdate($gender:String!) {
  genderUpdate(gender: $gender) {
    user {
      id
      username
      gender
    }
  }
}

mutation staffToggle($id:ID!) {
  staffToggle(input: { id: $id, isStaff: true }) {
    clientMutationId
  }
}

mutation adminToggle($id:ID!) {
  adminToggle(input: { id: $id, isAdmin: true }) {
    clientMutationId
  }
}

mutation superToggle($id:ID!) {
  superToggle(input: { id: $id, isSuperuser: true }) {
    clientMutationId
  }
}

mutation activeToggle($id:ID!) {
  activeToggle(input: { id: $id, isActive: true }) {
    clientMutationId
  }
}

mutation activatedToggle($id:ID!) {
  activatedToggle(input: { id: $id, isActive: true }) {
    clientMutationId
  }
}


mutation userDelete($id:ID!) {
  userDelete(input: { id: $id }) {
    clientMutationId
    user {
      id
    }
  }
}